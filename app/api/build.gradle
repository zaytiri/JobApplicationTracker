plugins {
    id 'java'
    id 'application'
}

group = 'personal.zaytiri.jobtracker'
version = '1.0'

application {
    mainModule = 'personal.zaytiri.jobtracker'
    mainClass = 'personal.zaytiri.jobtracker.Main'
}

repositories {
    mavenCentral()
}

dependencies {
    testImplementation platform('org.junit:junit-bom:5.9.1')
    testImplementation 'org.junit.jupiter:junit-jupiter'

    // libraries to have access to the rest api
    implementation 'org.glassfish.jersey.containers:jersey-container-servlet:3.1.1'
    implementation 'org.glassfish.jersey.inject:jersey-hk2:3.1.1'
    implementation 'org.glassfish.jersey.core:jersey-server:3.1.1'
    implementation 'org.glassfish.jersey.containers:jersey-container-grizzly2-http:3.1.1'

    //MIEQ library to have access to easily querying data from db.
    implementation files('libs/mieq-v1.0.1.jar')

    // dagger DI -- dapper is a dagger fork which supports modular projects.
    implementation('io.github.jbock-java:dapper:2.41.2')
    annotationProcessor('io.github.jbock-java:dapper-compiler:2.41.2')

    // sqlite jdbc database
    implementation group: 'org.xerial', name: 'sqlite-jdbc', version: '3.41.2.2'

    // json manipulation
    implementation 'org.json:json:20231013'
    implementation 'com.fasterxml.jackson.core:jackson-databind:2.16.1'
    implementation 'com.fasterxml.jackson.datatype:jackson-datatype-jsr310:2.17.0'

    // auto mapping
    implementation 'org.mapstruct:mapstruct:1.4.2.Final'
    annotationProcessor "org.mapstruct:mapstruct-processor:1.4.2.Final"

    // scrapping websites
    implementation group: 'org.htmlunit', name: 'htmlunit', version: '3.11.0'
}

jar {
    manifest {
        attributes 'Main-Class': application.mainClass
        attributes 'Class-Path': configurations.compileClasspath.collect { it.getName() }.join(' ')
    }

    from {
        configurations.runtimeClasspath.collect { it.isDirectory() ? it : zipTree(it) }
    }
}

tasks.withType(Jar.class).configureEach {
    duplicatesStrategy = DuplicatesStrategy.EXCLUDE
}

test {
    useJUnitPlatform()
}